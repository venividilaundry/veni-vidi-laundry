{"ast":null,"code":"import axios from 'axios';\n\n// Use environment variable in production, fallback to relative path\nconst API_BASE_URL = process.env.REACT_APP_API_URL ? process.env.REACT_APP_API_URL + '/api' : '/api';\naxios.defaults.baseURL = API_BASE_URL;\naxios.defaults.withCredentials = true;\nexport const authAPI = {\n  checkPostcode: postcode => axios.post('/auth/check-postcode', {\n    postcode\n  }),\n  login: (email, password) => axios.post('/auth/login', {\n    email,\n    password\n  }),\n  register: userData => axios.post('/auth/register', userData)\n};\nexport const subscriptionsAPI = {\n  getPricing: () => axios.get('/subscriptions/pricing'),\n  create: subscriptionData => axios.post('/subscriptions/create', subscriptionData),\n  getMySubscriptions: () => axios.get('/subscriptions/my-subscriptions'),\n  cancel: id => axios.put(`/subscriptions/${id}/cancel`)\n};\nexport const ordersAPI = {\n  getPricing: () => axios.get('/orders/pricing'),\n  create: orderData => axios.post('/orders/create', orderData),\n  getMyOrders: () => axios.get('/orders/my-orders'),\n  getOrder: id => axios.get(`/orders/${id}`)\n};\nexport const adminAPI = {\n  getOrders: () => axios.get('/admin/orders'),\n  getSubscriptions: () => axios.get('/admin/subscriptions'),\n  updateOrderStatus: (id, status, deliveryDate) => axios.put(`/admin/orders/${id}/status`, {\n    status,\n    deliveryDate\n  }),\n  getDashboard: () => axios.get('/admin/dashboard'),\n  getCustomers: () => axios.get('/admin/customers')\n};\nexport default {\n  authAPI,\n  subscriptionsAPI,\n  ordersAPI,\n  adminAPI\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","defaults","baseURL","withCredentials","authAPI","checkPostcode","postcode","post","login","email","password","register","userData","subscriptionsAPI","getPricing","get","create","subscriptionData","getMySubscriptions","cancel","id","put","ordersAPI","orderData","getMyOrders","getOrder","adminAPI","getOrders","getSubscriptions","updateOrderStatus","status","deliveryDate","getDashboard","getCustomers"],"sources":["/Users/tarunvermani/Documents/veni-vidi-laundry/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Use environment variable in production, fallback to relative path\nconst API_BASE_URL = process.env.REACT_APP_API_URL \n  ? process.env.REACT_APP_API_URL + '/api'\n  : '/api';\n\naxios.defaults.baseURL = API_BASE_URL;\naxios.defaults.withCredentials = true;\n\nexport const authAPI = {\n  checkPostcode: (postcode) => axios.post('/auth/check-postcode', { postcode }),\n  login: (email, password) => axios.post('/auth/login', { email, password }),\n  register: (userData) => axios.post('/auth/register', userData)\n};\n\nexport const subscriptionsAPI = {\n  getPricing: () => axios.get('/subscriptions/pricing'),\n  create: (subscriptionData) => axios.post('/subscriptions/create', subscriptionData),\n  getMySubscriptions: () => axios.get('/subscriptions/my-subscriptions'),\n  cancel: (id) => axios.put(`/subscriptions/${id}/cancel`)\n};\n\nexport const ordersAPI = {\n  getPricing: () => axios.get('/orders/pricing'),\n  create: (orderData) => axios.post('/orders/create', orderData),\n  getMyOrders: () => axios.get('/orders/my-orders'),\n  getOrder: (id) => axios.get(`/orders/${id}`)\n};\n\nexport const adminAPI = {\n  getOrders: () => axios.get('/admin/orders'),\n  getSubscriptions: () => axios.get('/admin/subscriptions'),\n  updateOrderStatus: (id, status, deliveryDate) => \n    axios.put(`/admin/orders/${id}/status`, { status, deliveryDate }),\n  getDashboard: () => axios.get('/admin/dashboard'),\n  getCustomers: () => axios.get('/admin/customers')\n};\n\nexport default {\n  authAPI,\n  subscriptionsAPI,\n  ordersAPI,\n  adminAPI\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAC9CF,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,MAAM,GACtC,MAAM;AAEVJ,KAAK,CAACK,QAAQ,CAACC,OAAO,GAAGL,YAAY;AACrCD,KAAK,CAACK,QAAQ,CAACE,eAAe,GAAG,IAAI;AAErC,OAAO,MAAMC,OAAO,GAAG;EACrBC,aAAa,EAAGC,QAAQ,IAAKV,KAAK,CAACW,IAAI,CAAC,sBAAsB,EAAE;IAAED;EAAS,CAAC,CAAC;EAC7EE,KAAK,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAKd,KAAK,CAACW,IAAI,CAAC,aAAa,EAAE;IAAEE,KAAK;IAAEC;EAAS,CAAC,CAAC;EAC1EC,QAAQ,EAAGC,QAAQ,IAAKhB,KAAK,CAACW,IAAI,CAAC,gBAAgB,EAAEK,QAAQ;AAC/D,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG;EAC9BC,UAAU,EAAEA,CAAA,KAAMlB,KAAK,CAACmB,GAAG,CAAC,wBAAwB,CAAC;EACrDC,MAAM,EAAGC,gBAAgB,IAAKrB,KAAK,CAACW,IAAI,CAAC,uBAAuB,EAAEU,gBAAgB,CAAC;EACnFC,kBAAkB,EAAEA,CAAA,KAAMtB,KAAK,CAACmB,GAAG,CAAC,iCAAiC,CAAC;EACtEI,MAAM,EAAGC,EAAE,IAAKxB,KAAK,CAACyB,GAAG,CAAC,kBAAkBD,EAAE,SAAS;AACzD,CAAC;AAED,OAAO,MAAME,SAAS,GAAG;EACvBR,UAAU,EAAEA,CAAA,KAAMlB,KAAK,CAACmB,GAAG,CAAC,iBAAiB,CAAC;EAC9CC,MAAM,EAAGO,SAAS,IAAK3B,KAAK,CAACW,IAAI,CAAC,gBAAgB,EAAEgB,SAAS,CAAC;EAC9DC,WAAW,EAAEA,CAAA,KAAM5B,KAAK,CAACmB,GAAG,CAAC,mBAAmB,CAAC;EACjDU,QAAQ,EAAGL,EAAE,IAAKxB,KAAK,CAACmB,GAAG,CAAC,WAAWK,EAAE,EAAE;AAC7C,CAAC;AAED,OAAO,MAAMM,QAAQ,GAAG;EACtBC,SAAS,EAAEA,CAAA,KAAM/B,KAAK,CAACmB,GAAG,CAAC,eAAe,CAAC;EAC3Ca,gBAAgB,EAAEA,CAAA,KAAMhC,KAAK,CAACmB,GAAG,CAAC,sBAAsB,CAAC;EACzDc,iBAAiB,EAAEA,CAACT,EAAE,EAAEU,MAAM,EAAEC,YAAY,KAC1CnC,KAAK,CAACyB,GAAG,CAAC,iBAAiBD,EAAE,SAAS,EAAE;IAAEU,MAAM;IAAEC;EAAa,CAAC,CAAC;EACnEC,YAAY,EAAEA,CAAA,KAAMpC,KAAK,CAACmB,GAAG,CAAC,kBAAkB,CAAC;EACjDkB,YAAY,EAAEA,CAAA,KAAMrC,KAAK,CAACmB,GAAG,CAAC,kBAAkB;AAClD,CAAC;AAED,eAAe;EACbX,OAAO;EACPS,gBAAgB;EAChBS,SAAS;EACTI;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}